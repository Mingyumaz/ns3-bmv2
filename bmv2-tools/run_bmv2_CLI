#!/usr/bin/env python

import sys, os
import subprocess
import argparse

def run_CLI(thrift_port, cli_input_commands, log_dir):
    cli = 'simple_switch_CLI'
    print ('Configuring bmv2 pipeline on port {} with file {}'.format(thrift_port, cli_input_commands))
    with open(cli_input_commands, 'r') as fin:
        cli_outfile = os.path.join(log_dir, 'bmv2-{}-cli-output.log'.format(thrift_port))
        with open(cli_outfile, 'w') as fout:
            p = subprocess.Popen([cli, '--thrift-port', str(thrift_port)],
                             stdin=fin, stdout=fout)
            p.wait()

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('-p', '--thrift_port', help='the thrift port to connect to',
                        type=int, required=False, default=9090)
    parser.add_argument('-o', '--log_dir', help='the directory to populate with log files',
                        type=str, required=False, default='/tmp')
    parser.add_argument('commandsFile', help='the file that contains the commands for the CLI',
                        type=str)
    args = parser.parse_args()
    if (os.path.exists(args.commandsFile) and (os.path.getsize(args.commandsFile))):
        run_CLI(args.thrift_port, args.commandsFile, args.log_dir)
    else:
        print("There is no commands file or commands file is empty.")